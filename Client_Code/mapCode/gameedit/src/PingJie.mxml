<?xml version="1.0" encoding="utf-8"?>
<s:WindowedApplication xmlns:fx="http://ns.adobe.com/mxml/2009"
					   xmlns:s="library://ns.adobe.com/flex/spark"
					   xmlns:mx="library://ns.adobe.com/flex/mx"
					   width="360" height="184" applicationComplete="windowedapplication1_applicationCompleteHandler(event)">
	
	<fx:Script>
		<![CDATA[
			protected function windowedapplication1_applicationCompleteHandler(event:FlexEvent):void
			{
				imgLoder.contentLoaderInfo.addEventListener(Event.COMPLETE,onComplete);
			}
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<c:GameMoveWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
			 xmlns:s="library://ns.adobe.com/flex/spark" 
			 xmlns:mx="library://ns.adobe.com/flex/mx"
			 xmlns:c="control.*"
			 title="提取散图"
			  width="361" height="185">
		<fx:Script>
			<![CDATA[
				import common.App;
				import common.STDispatcher;
				
				import flashx.textLayout.formats.Direction;
				
				import model.STEvent;
				
				import mx.controls.Alert;
				import mx.core.UIComponent;
				import mx.events.FlexEvent;
				import mx.graphics.codec.JPEGEncoder;
				 
				
				private var _file:File=File.applicationDirectory;	
				
				private var bitmapDataBig:BitmapData;
				private var maxW:int=1;
				private var maxH:int=1;
				private var imgLoder:MyLoader=new MyLoader();
				private var arrLoader:Array;
				//事件：点击取消按钮
				protected function btnCancel_clickHandler(event:MouseEvent):void{

				}
				
				//事件：点击项目目录选择按钮
				protected function btnChoose_clickHandler(event:MouseEvent):void{
					_file.browseForDirectory("选择项目保存路径");
					_file.addEventListener(Event.SELECT,fileSelectHanlder);
				}
				
				//事件：项目目录选择完毕
				private function fileSelectHanlder(evet:Event):void{
					txtProPath.text= _file.nativePath;
				}
	
				//事件：提交
				protected function btnOK_clickHandler(event:MouseEvent):void{
					if(txtProName.text==""){
						Alert.show("文件格式");
						return;
					}
					
					if(txtProPath.text==""){
						Alert.show("请选择图片路径");
						return;
					}
					var str:String=File.applicationDirectory .nativePath+"\\model.jpg";
					var imgLoder:Loader=new Loader();
					imgLoder.contentLoaderInfo.addEventListener(Event.COMPLETE,onStart);
					imgLoder.contentLoaderInfo.addEventListener(IOErrorEvent.IO_ERROR,onError);
					imgLoder.load(new URLRequest(str));
				}

				public function onError(evt:IOErrorEvent):void{
					trace("error");
				}
				
				public function onStart(evt:Event):void{
					bitmapDataBig=(evt.target as  LoaderInfo).content["bitmapData"] as BitmapData;
//					var bitmap:Bitmap=new Bitmap(bitmapDataBig);
//					var comp:UIComponent=new UIComponent();
//					comp.addChild(bitmap);
//					this.addElement(comp);
//					
//					return;
					var format:String=txtProName.text
					var pIndex:int=format.lastIndexOf(".");
					var name:String=format.substr(0,pIndex);
					var ext:String=format.substring(pIndex+1,format.length);
					
					var fileArr:Array=_file.getDirectoryListing();
					maxW=maxH=1;
					 arrLoader=new Array();
					for(var i:int=0;i<fileArr.length;i++){
						var fileT:File=fileArr[i] as File;
						if(fileT.extension==ext){
							var nameT:String=fileT.name.replace(".jpg","");
							var yT:int=int(nameT.split("_")[0]);
							var xT:int=int(nameT.split("_")[1]);
							arrLoader.push({name:fileT.nativePath,x:xT,y:yT});
							if(yT>maxH){
								maxH=yT;
							}
							if(xT>maxW){
								maxW=xT;
							}
						}
					}
					
					onComplete(null);
				}
				
				public function onComplete(evt:Event):void{
					if(evt==null){
						if(arrLoader.length>0){
							imgLoder.xx=arrLoader[0].x;
							imgLoder.yy=arrLoader[0].y;
							imgLoder.load(new URLRequest(arrLoader[0].name));
							arrLoader.shift();
							return;
						}
					}else{
						
						var loaderinfo:LoaderInfo=evt.target as  LoaderInfo;
						var w:int=loaderinfo.width;
						var h:int=loaderinfo.height;
						
						var loader:MyLoader=loaderinfo.loader as MyLoader;
						var x:int=loader.xx*w;
						var y:int=loader.yy*h;
						var bitmapData:BitmapData=loaderinfo.content["bitmapData"] as BitmapData;
						if(x+w<bitmapDataBig.width && y+h<bitmapDataBig.height){
							bitmapDataBig.copyPixels(bitmapData,new Rectangle(0,0,w,h),new Point(x,y));
						}
						
						if(arrLoader.length>0){
							  
							imgLoder.xx=arrLoader[0].x;
							imgLoder.yy=arrLoader[0].y;
							imgLoder.load(new URLRequest(arrLoader[0].name));
							arrLoader.shift();
						}else{
							if(evt==null){}else{
								var bitmap:Bitmap=new Bitmap(bitmapDataBig);
								var comp:UIComponent=new UIComponent();
								comp.addChild(bitmap);
								this.addElement(comp);
								
								//小图片所在的矩形区域
								var recs:Rectangle=new Rectangle(0,0,w*++maxW,h*++maxH);
								
								//JPEG编码矩形区域的bytes数组 or PNGEncoder 品质100
								//var pngEncoder:PNGEncoder=new PNGEncoder();
								//						var jpgEncoderS:JPEGEncoder=new JPEGEncoder(100);
								//						var bytespixelsS:ByteArray=bitmapDataBig.getPixels(recs)
								//						var bytesS:ByteArray=jpgEncoderS.encodeByteArray(bytespixelsS,w*maxW,h*maxH);
								var jpgEncoderS:JPEGEncoder2=new JPEGEncoder2(100);
								var bytespixelsS:ByteArray=bitmapDataBig.getPixels(recs)
								var bytesS:ByteArray=jpgEncoderS.encode(bitmapDataBig,w*maxW,h*maxH);
								
								//写入到本地文档HFMapEdit/文件夹中
								var fsS:FileStream = new FileStream();
								var fileS:File = new File(File.applicationDirectory.nativePath+"\\"+_file.name+"out.jpg");
								fsS.openAsync(fileS,FileMode.WRITE);
								fsS.writeBytes(bytesS);
								fsS.close();
							}
						}
					}
					 
				}
				
				
			]]>
		</fx:Script>
	
		
			<s:VGroup width="100%" height="100%">
				<s:HGroup width="100%" height="24">
					<s:HGroup width="100%" height="24" paddingLeft="10" paddingTop="1">
						<s:Label text="背景尺寸：" height="21" paddingTop="5" width="72"/>
						<s:Label text="宽度" height="21" paddingTop="5" width="25"/>
						<s:TextInput id="txtImgWidth" width="97" enabled="false" text="1000"/>
						<s:Label text="高度" height="21" paddingTop="5" width="28"/>
						<s:TextInput id="txtImgHeight" width="97" enabled="false" text="1000"/>
					</s:HGroup>
				</s:HGroup>
				<s:HGroup width="100%" height="24" paddingLeft="10" paddingTop="1">
					<s:Label text="命名格式：" height="21" paddingTop="5" width="70"/>
					<mx:TextInput id="txtProName" width="227" text="(y)_(x).jpg"/>
				</s:HGroup>
				<s:HGroup width="100%" height="24" paddingLeft="10" paddingTop="1">
					<s:Label text="图片路径：" height="21" paddingTop="5" width="70"/>
					<mx:TextInput id="txtProPath" width="227"/>
					<s:Button label="..." width="30" click="btnChoose_clickHandler(event)"/>
				</s:HGroup>
				<s:HGroup width="100%" height="24" paddingLeft="10" paddingTop="1">
				</s:HGroup>
				<s:HGroup width="100%" height="24" paddingLeft="100" paddingTop="1">
					<s:Button label="确定"  click="btnOK_clickHandler(event)"/>
					<s:Button label="取消" click="btnCancel_clickHandler(event)"/>
				</s:HGroup>
			</s:VGroup>
	</c:GameMoveWindow>
</s:WindowedApplication>
